import React, { useState } from "react";

const ImageUploader = ({ onFileSelect}) => {
  const [selectedFile, setSelectedFile] = useState(null);
  const [previewSrc, setPreviewSrc] = useState(null);

  const dragNdrop = (event) => {
    const file = event.target.files[0];

    if (file) {
      setSelectedFile(file);
      const fileName = URL.createObjectURL(file);
      setPreviewSrc(fileName);
      onFileSelect(file);

    }
  };

  const drag = () => {
    document
      .getElementById("uploadFile")
      .parentNode.classList.add("draging", "dragBox");
  };

  const drop = () => {
    document
      .getElementById("uploadFile")
      .parentNode.classList.remove("draging");
  };

  return (
    <div className="text-center">
      {previewSrc ? (
        <div id="preview" className="text-center w-[412px] h-[412px] ">
          <img
            src={previewSrc}
            alt="Preview"
            className="max-w-full max-h-full mx-auto"
          />
        </div>
      ) : (
        <div
          className="dragBox w-[412px] h-[412px] rounded-lg bg-[#4A4A4A] relative text-center text-sm line-height-32 text-gray-300 border-2 border-dashed border-gray-300 transition-transform duration-300 transform"
          onDragOver={drag}
          onDrop={drop}
        >
          <div className="flex flex-col justify-center h-full">
            <svg
              width="103"
              height="102"
              viewBox="0 0 103 102"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="mx-auto"
            >
              {/* ... SVG path */}
              <path
                d="M66.95 27.4615C65.2608 27.4458 63.8051 28.4109 63.2008 29.3054L53.8038 42.8675C53.2201 43.6835 51.9154 43.1538 51.3077 42.7498L42.8789 36.6808C41.8832 35.9354 40.7502 35.3077 39.4868 35.3077C38.1821 35.3077 36.7882 35.7549 35.8062 37.0103L24.5003 51.6198C22.9724 53.5735 25.5303 56.1942 27.0615 54.2405L38.3709 39.6309C39.1194 38.7129 40.2078 39.4348 40.9974 39.9605L49.4434 46.0491L49.4846 46.0726C50.5352 46.818 51.7163 47.0612 52.8768 47.0769C54.0441 47.0926 55.3144 46.971 56.2586 45.6646L65.7586 31.9338C66.5037 30.9021 67.592 31.3846 68.313 32.0908L76.0518 38.7129C77.8611 40.5842 80.1889 37.2418 78.1804 35.6529L70.4486 29.0229C69.5319 28.1991 68.368 27.4615 66.95 27.4615ZM25.75 58.8462H77.25C78.201 58.8462 78.9667 59.721 78.9667 60.8077C78.9667 61.8944 78.201 62.7692 77.25 62.7692H25.75C24.799 62.7692 24.0333 61.8944 24.0333 60.8077C24.0333 59.721 24.799 58.8462 25.75 58.8462ZM37.7667 11.7692C33.99 11.7692 30.9 15.3 30.9 19.6154C30.9 23.9308 33.99 27.4615 37.7667 27.4615C41.5433 27.4615 44.6333 23.9308 44.6333 19.6154C44.6333 15.3 41.5433 11.7692 37.7667 11.7692ZM37.7667 15.6923C39.6825 15.6923 41.2 17.4263 41.2 19.6154C41.2 21.8045 39.6825 23.5385 37.7667 23.5385C35.8509 23.5385 34.3333 21.8045 34.3333 19.6154C34.3333 17.4263 35.8509 15.6923 37.7667 15.6923ZM85.8333 92.1923C85.8333 92.7125 85.6525 93.2115 85.3305 93.5793C85.0086 93.9472 84.572 94.1538 84.1167 94.1538C83.6614 94.1538 83.2247 93.9472 82.9028 93.5793C82.5809 93.2115 82.4 92.7125 82.4 92.1923C82.4 91.6721 82.5809 91.1731 82.9028 90.8053C83.2247 90.4374 83.6614 90.2308 84.1167 90.2308C84.572 90.2308 85.0086 90.4374 85.3305 90.8053C85.6525 91.1731 85.8333 91.6721 85.8333 92.1923ZM20.6 92.1923C20.6 92.7125 20.4191 93.2115 20.0972 93.5793C19.7753 93.9472 19.3386 94.1538 18.8833 94.1538C18.428 94.1538 17.9914 93.9472 17.6695 93.5793C17.3475 93.2115 17.1667 92.7125 17.1667 92.1923C17.1667 91.6721 17.3475 91.1731 17.6695 90.8053C17.9914 90.4374 18.428 90.2308 18.8833 90.2308C19.3386 90.2308 19.7753 90.4374 20.0972 90.8053C20.4191 91.1731 20.6 91.6721 20.6 92.1923ZM51.5 86.3077C47.7233 86.3077 44.6333 89.8385 44.6333 94.1538C44.6333 98.4692 47.7233 102 51.5 102C55.2767 102 58.3667 98.4692 58.3667 94.1538C58.3667 89.8385 55.2767 86.3077 51.5 86.3077ZM51.5 90.2308C53.433 90.2308 54.9333 91.9452 54.9333 94.1538C54.9333 96.3625 53.433 98.0769 51.5 98.0769C49.567 98.0769 48.0667 96.3625 48.0667 94.1538C48.0667 91.9452 49.567 90.2308 51.5 90.2308ZM90.9833 3.92308C88.7002 3.92308 88.7585 7.84615 90.9833 7.84615H97.85C98.8319 7.84615 99.5667 8.68569 99.5667 9.80769V64.7308C99.5667 65.8528 98.8319 66.6923 97.85 66.6923H90.9833C88.7379 66.6923 88.7173 70.6154 90.9833 70.6154H97.85C100.672 70.6154 103 67.9555 103 64.7308V9.80769C103 6.58292 100.672 3.92308 97.85 3.92308H90.9833ZM5.15 3.92308C2.3278 3.92308 0 6.58292 0 9.80769V64.7308C0 67.9555 2.3278 70.6154 5.15 70.6154H12.0167C14.2827 70.6154 14.2998 66.6923 12.0167 66.6923H5.15C4.16807 66.6923 3.43333 65.8528 3.43333 64.7308V9.80769C3.43333 8.68569 4.16807 7.84615 5.15 7.84615H12.0167C14.2827 7.84615 14.2827 3.92308 12.0167 3.92308H5.15ZM22.3167 0C19.4945 0 17.1667 2.65985 17.1667 5.88462V68.6538C17.1667 71.8786 19.4945 74.5385 22.3167 74.5385H80.6833C83.5055 74.5385 85.8333 71.8786 85.8333 68.6538V5.88462C85.8333 2.65985 83.5055 0 80.6833 0H22.3167ZM22.3167 3.92308H80.6833C81.6653 3.92308 82.4 4.76262 82.4 5.88462V68.6538C82.4 69.7758 81.6653 70.6154 80.6833 70.6154H22.3167C21.3347 70.6154 20.6 69.7758 20.6 68.6538V5.88462C20.6 4.76262 21.3347 3.92308 22.3167 3.92308Z"
                fill="#878787"
              />
            </svg>
            <p className="mt-4">Drag and Drop your image</p>
            <p>or</p>
            <p className="text-blue-400 underline-offset-1 underline decoration-blue-400 text-xs">
              click to browse on your device
            </p>
          </div>
          <input
            type="file"
            onChange={dragNdrop}
            id="uploadFile"
            className="absolute h-full w-full opacity-0 top-0 left-0"
          />
        </div>
      )}
    </div>
  );
};

export default ImageUploader;
